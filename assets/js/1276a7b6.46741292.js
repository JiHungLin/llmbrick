"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[317],{4777:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"documents/bricks/common_brick_guide","title":"CommonBrick","description":"\u76ee\u9304","source":"@site/docs/documents/bricks/common_brick_guide.md","sourceDirName":"documents/bricks","slug":"/documents/bricks/common_brick_guide","permalink":"/llmbrick/docs/documents/bricks/common_brick_guide","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentsSidebar","previous":{"title":"Bricks","permalink":"/llmbrick/docs/category/bricks"},"next":{"title":"ComposeBrick","permalink":"/llmbrick/docs/documents/bricks/compose_brick_guide"}}');var o=r(4848),t=r(8453);const a={},i="CommonBrick",l={},c=[{value:"\u76ee\u9304",id:"\u76ee\u9304",level:2},{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u67b6\u69cb\u8a2d\u8a08",id:"\u67b6\u69cb\u8a2d\u8a08",level:2},{value:"\u8a2d\u8a08\u6a21\u5f0f",id:"\u8a2d\u8a08\u6a21\u5f0f",level:3},{value:"\u6838\u5fc3\u7d44\u4ef6",id:"\u6838\u5fc3\u7d44\u4ef6",level:3},{value:"\u5feb\u901f\u958b\u59cb",id:"\u5feb\u901f\u958b\u59cb",level:2},{value:"\u57fa\u672c\u5b89\u88dd",id:"\u57fa\u672c\u5b89\u88dd",level:3},{value:"\u6700\u7c21\u55ae\u7684 Brick \u5be6\u73fe",id:"\u6700\u7c21\u55ae\u7684-brick-\u5be6\u73fe",level:3},{value:"\u55ae\u6a5f\u7248\u4f7f\u7528",id:"\u55ae\u6a5f\u7248\u4f7f\u7528",level:2},{value:"1. \u5275\u5efa\u548c\u4f7f\u7528 Brick",id:"1-\u5275\u5efa\u548c\u4f7f\u7528-brick",level:3},{value:"2. \u5be6\u73fe\u6240\u6709\u8655\u7406\u6a21\u5f0f",id:"2-\u5be6\u73fe\u6240\u6709\u8655\u7406\u6a21\u5f0f",level:3},{value:"3. \u4f7f\u7528\u7bc4\u4f8b",id:"3-\u4f7f\u7528\u7bc4\u4f8b",level:3},{value:"gRPC\u7248\u4f7f\u7528",id:"grpc\u7248\u4f7f\u7528",level:2},{value:"1. \u670d\u52d9\u7aef\u8a2d\u7f6e",id:"1-\u670d\u52d9\u7aef\u8a2d\u7f6e",level:3},{value:"2. \u5ba2\u6236\u7aef\u4f7f\u7528",id:"2-\u5ba2\u6236\u7aef\u4f7f\u7528",level:3},{value:"3. \u7121\u7e2b\u5207\u63db\u793a\u4f8b",id:"3-\u7121\u7e2b\u5207\u63db\u793a\u4f8b",level:3},{value:"\u6700\u4f73\u5be6\u8e10",id:"\u6700\u4f73\u5be6\u8e10",level:2},{value:"1. \u7570\u6b65\u51fd\u6578\u8a2d\u8a08",id:"1-\u7570\u6b65\u51fd\u6578\u8a2d\u8a08",level:3},{value:"2. \u932f\u8aa4\u8655\u7406\u7b56\u7565",id:"2-\u932f\u8aa4\u8655\u7406\u7b56\u7565",level:3},{value:"3. \u6027\u80fd\u512a\u5316",id:"3-\u6027\u80fd\u512a\u5316",level:3},{value:"\u932f\u8aa4\u8655\u7406",id:"\u932f\u8aa4\u8655\u7406",level:2},{value:"\u4f7f\u7528\u6846\u67b6\u63d0\u4f9b\u7684ErrorCodes\u5de5\u5177\u985e",id:"\u4f7f\u7528\u6846\u67b6\u63d0\u4f9b\u7684errorcodes\u5de5\u5177\u985e",level:3},{value:"ErrorCodes\u985e\u5225\u7684\u4e3b\u8981\u7279\u9ede",id:"errorcodes\u985e\u5225\u7684\u4e3b\u8981\u7279\u9ede",level:3},{value:"1. \u5b8c\u6574\u7684\u932f\u8aa4\u4ee3\u78bc\u9ad4\u7cfb",id:"1-\u5b8c\u6574\u7684\u932f\u8aa4\u4ee3\u78bc\u9ad4\u7cfb",level:4},{value:"2. \u4fbf\u5229\u7684\u5de5\u5ee0\u65b9\u6cd5",id:"2-\u4fbf\u5229\u7684\u5de5\u5ee0\u65b9\u6cd5",level:4},{value:"3. \u932f\u8aa4\u5206\u985e\u5de5\u5177",id:"3-\u932f\u8aa4\u5206\u985e\u5de5\u5177",level:4},{value:"\u5be6\u969b\u4f7f\u7528\u7bc4\u4f8b",id:"\u5be6\u969b\u4f7f\u7528\u7bc4\u4f8b",level:3},{value:"\u6027\u80fd\u8003\u616e",id:"\u6027\u80fd\u8003\u616e",level:2},{value:"1. \u4e26\u767c\u8655\u7406",id:"1-\u4e26\u767c\u8655\u7406",level:3},{value:"2. \u5167\u5b58\u7ba1\u7406",id:"2-\u5167\u5b58\u7ba1\u7406",level:3},{value:"\u5e38\u898b\u554f\u984c",id:"\u5e38\u898b\u554f\u984c",level:2},{value:"Q1: \u5982\u4f55\u8655\u7406\u9577\u6642\u9593\u904b\u884c\u7684\u4efb\u52d9\uff1f",id:"q1-\u5982\u4f55\u8655\u7406\u9577\u6642\u9593\u904b\u884c\u7684\u4efb\u52d9",level:3},{value:"Q2: \u5982\u4f55\u5be6\u73fe\u8d85\u6642\u63a7\u5236\uff1f",id:"q2-\u5982\u4f55\u5be6\u73fe\u8d85\u6642\u63a7\u5236",level:3},{value:"Q3: \u5982\u4f55\u5be6\u73fe\u91cd\u8a66\u6a5f\u5236\uff1f",id:"q3-\u5982\u4f55\u5be6\u73fe\u91cd\u8a66\u6a5f\u5236",level:3},{value:"\u7e3d\u7d50",id:"\u7e3d\u7d50",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"commonbrick",children:"CommonBrick"})}),"\n",(0,o.jsx)(n.h2,{id:"\u76ee\u9304",children:"\u76ee\u9304"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E6%A6%82%E8%BF%B0",children:"\u6982\u8ff0"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E6%9E%B6%E6%A7%8B%E8%A8%AD%E8%A8%88",children:"\u67b6\u69cb\u8a2d\u8a08"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E5%BF%AB%E9%80%9F%E9%96%8B%E5%A7%8B",children:"\u5feb\u901f\u958b\u59cb"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E5%96%AE%E6%A9%9F%E7%89%88%E4%BD%BF%E7%94%A8",children:"\u55ae\u6a5f\u7248\u4f7f\u7528"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#grpc%E7%89%88%E4%BD%BF%E7%94%A8",children:"gRPC\u7248\u4f7f\u7528"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E6%9C%80%E4%BD%B3%E5%AF%A6%E8%B8%90",children:"\u6700\u4f73\u5be6\u8e10"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E9%8C%AF%E8%AA%A4%E8%99%95%E7%90%86",children:"\u932f\u8aa4\u8655\u7406"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E6%80%A7%E8%83%BD%E8%80%83%E6%85%AE",children:"\u6027\u80fd\u8003\u616e"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#%E5%B8%B8%E8%A6%8B%E5%95%8F%E9%A1%8C",children:"\u5e38\u898b\u554f\u984c"})}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\u6982\u8ff0",children:"\u6982\u8ff0"}),"\n",(0,o.jsx)(n.p,{children:"CommonBrick \u662f LLMBrick \u6846\u67b6\u4e2d\u7684\u6838\u5fc3\u7d44\u4ef6\uff0c\u63d0\u4f9b\u7d71\u4e00\u7684\u7570\u6b65\u8655\u7406\u4ecb\u9762\uff0c\u652f\u63f4\u672c\u5730\u8abf\u7528\u548c\u9060\u7a0b gRPC \u8abf\u7528\u7684\u7121\u7e2b\u5207\u63db\u3002\u5b83\u5be6\u73fe\u4e86\u56db\u7a2e\u4e0d\u540c\u7684\u8655\u7406\u6a21\u5f0f\uff1a"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Unary"}),": \u55ae\u6b21\u8acb\u6c42-\u56de\u61c9"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Output Streaming"}),": \u55ae\u6b21\u8acb\u6c42-\u6d41\u5f0f\u56de\u61c9"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Input Streaming"}),": \u6d41\u5f0f\u8acb\u6c42-\u55ae\u6b21\u56de\u61c9"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Bidirectional Streaming"}),": \u96d9\u5411\u6d41\u5f0f\u8655\u7406"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\u67b6\u69cb\u8a2d\u8a08",children:"\u67b6\u69cb\u8a2d\u8a08"}),"\n",(0,o.jsx)(n.h3,{id:"\u8a2d\u8a08\u6a21\u5f0f",children:"\u8a2d\u8a08\u6a21\u5f0f"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u88dd\u98fe\u5668\u6a21\u5f0f"}),": \u4f7f\u7528 ",(0,o.jsx)(n.code,{children:"@unary_handler"}),", ",(0,o.jsx)(n.code,{children:"@output_streaming_handler"})," \u7b49\u88dd\u98fe\u5668\u8a3b\u518a\u8655\u7406\u51fd\u6578"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u9069\u914d\u5668\u6a21\u5f0f"}),": ",(0,o.jsx)(n.code,{children:"CommonGrpcWrapper"})," \u63d0\u4f9b gRPC \u548c\u672c\u5730\u8abf\u7528\u4e4b\u9593\u7684\u9069\u914d"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u5de5\u5ee0\u6a21\u5f0f"}),": ",(0,o.jsx)(n.code,{children:"toGrpcClient()"})," \u52d5\u614b\u5275\u5efa gRPC \u5ba2\u6236\u7aef"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u7b56\u7565\u6a21\u5f0f"}),": \u652f\u63f4\u591a\u7a2e\u8abf\u7528\u7b56\u7565\uff08\u672c\u5730/\u9060\u7a0b\uff09"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"\u6838\u5fc3\u7d44\u4ef6",children:"\u6838\u5fc3\u7d44\u4ef6"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"CommonBrick (\u6838\u5fc3\u985e)\n\u251c\u2500\u2500 BaseBrick (\u57fa\u790e\u985e)\n\u251c\u2500\u2500 CommonGrpcWrapper (gRPC \u5305\u88dd\u5668)\n\u251c\u2500\u2500 CommonRequest/CommonResponse (\u6578\u64da\u6a21\u578b)\n\u2514\u2500\u2500 \u8655\u7406\u5668\u88dd\u98fe\u5668 (@unary_handler, @output_streaming_handler, etc.)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"\u5feb\u901f\u958b\u59cb",children:"\u5feb\u901f\u958b\u59cb"}),"\n",(0,o.jsx)(n.h3,{id:"\u57fa\u672c\u5b89\u88dd",children:"\u57fa\u672c\u5b89\u88dd"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from llmbrick.bricks.common.common import CommonBrick\nfrom llmbrick.core.brick import unary_handler, get_service_info_handler\nfrom llmbrick.protocols.models.bricks.common_types import (\n    CommonRequest, CommonResponse, ErrorDetail, ServiceInfoResponse\n)\n"})}),"\n",(0,o.jsx)(n.h3,{id:"\u6700\u7c21\u55ae\u7684-brick-\u5be6\u73fe",children:"\u6700\u7c21\u55ae\u7684 Brick \u5be6\u73fe"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class SimpleBrick(CommonBrick):\n    @unary_handler\n    async def process(self, request: CommonRequest) -> CommonResponse:\n        return CommonResponse(\n            data={"message": f"Hello, {request.data.get(\'name\', \'World\')}!"},\n            error=ErrorDetail(code=0, message="Success")\n        )\n    \n    @get_service_info_handler\n    async def get_info(self) -> ServiceInfoResponse:\n        return ServiceInfoResponse(\n            service_name="SimpleBrick",\n            version="1.0.0",\n            models=[],\n            error=ErrorDetail(code=0, message="Success")\n        )\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u55ae\u6a5f\u7248\u4f7f\u7528",children:"\u55ae\u6a5f\u7248\u4f7f\u7528"}),"\n",(0,o.jsx)(n.h3,{id:"1-\u5275\u5efa\u548c\u4f7f\u7528-brick",children:"1. \u5275\u5efa\u548c\u4f7f\u7528 Brick"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import asyncio\nfrom llmbrick.protocols.models.bricks.common_types import CommonRequest\n\nasync def main():\n    # \u5275\u5efa Brick \u5be6\u4f8b\n    brick = SimpleBrick(verbose=False)\n    \n    # \u767c\u9001\u8acb\u6c42\n    request = CommonRequest(data={"name": "Alice"})\n    response = await brick.run_unary(request)\n    \n    print(f"Response: {response.data[\'message\']}")\n    # \u8f38\u51fa: Response: Hello, Alice!\n\n# \u904b\u884c\nasyncio.run(main())\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-\u5be6\u73fe\u6240\u6709\u8655\u7406\u6a21\u5f0f",children:"2. \u5be6\u73fe\u6240\u6709\u8655\u7406\u6a21\u5f0f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from typing import AsyncIterator\nfrom llmbrick.core.brick import (\n    unary_handler, output_streaming_handler, \n    input_streaming_handler, bidi_streaming_handler\n)\n\nclass FullFeatureBrick(CommonBrick):\n    @unary_handler\n    async def unary_process(self, request: CommonRequest) -> CommonResponse:\n        """\u55ae\u6b21\u8655\u7406"""\n        result = request.data.get("value", 0) * 2\n        return CommonResponse(\n            data={"result": result},\n            error=ErrorDetail(code=0, message="Success")\n        )\n    \n    @output_streaming_handler\n    async def stream_output(self, request: CommonRequest) -> AsyncIterator[CommonResponse]:\n        """\u6d41\u5f0f\u8f38\u51fa"""\n        count = request.data.get("count", 5)\n        for i in range(count):\n            await asyncio.sleep(0.1)\n            yield CommonResponse(\n                data={"index": i, "value": i * i},\n                error=ErrorDetail(code=0, message="Success")\n            )\n    \n    @input_streaming_handler\n    async def stream_input(self, request_stream: AsyncIterator[CommonRequest]) -> CommonResponse:\n        """\u6d41\u5f0f\u8f38\u5165\u8655\u7406"""\n        total = 0\n        count = 0\n        async for req in request_stream:\n            total += req.data.get("value", 0)\n            count += 1\n        \n        return CommonResponse(\n            data={"sum": total, "count": count, "average": total/count if count > 0 else 0},\n            error=ErrorDetail(code=0, message="Success")\n        )\n    \n    @bidi_streaming_handler\n    async def bidi_process(self, request_stream: AsyncIterator[CommonRequest]) -> AsyncIterator[CommonResponse]:\n        """\u96d9\u5411\u6d41\u8655\u7406"""\n        async for req in request_stream:\n            value = req.data.get("value", 0)\n            yield CommonResponse(\n                data={"original": value, "doubled": value * 2},\n                error=ErrorDetail(code=0, message="Success")\n            )\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-\u4f7f\u7528\u7bc4\u4f8b",children:"3. \u4f7f\u7528\u7bc4\u4f8b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'async def demonstrate_all_modes():\n    brick = FullFeatureBrick(verbose=False)\n    \n    # 1. Unary \u8abf\u7528\n    response = await brick.run_unary(CommonRequest(data={"value": 10}))\n    print(f"Unary result: {response.data[\'result\']}")  # 20\n    \n    # 2. Output Streaming\n    async for response in brick.run_output_streaming(CommonRequest(data={"count": 3})):\n        print(f"Stream output: {response.data}")\n    \n    # 3. Input Streaming\n    async def input_generator():\n        for i in [1, 2, 3, 4, 5]:\n            yield CommonRequest(data={"value": i})\n    \n    result = await brick.run_input_streaming(input_generator())\n    print(f"Input stream result: {result.data}")  # {"sum": 15, "count": 5, "average": 3.0}\n    \n    # 4. Bidirectional Streaming\n    async def bidi_generator():\n        for i in [10, 20, 30]:\n            yield CommonRequest(data={"value": i})\n    \n    async for response in brick.run_bidi_streaming(bidi_generator()):\n        print(f"Bidi result: {response.data}")\n'})}),"\n",(0,o.jsx)(n.h2,{id:"grpc\u7248\u4f7f\u7528",children:"gRPC\u7248\u4f7f\u7528"}),"\n",(0,o.jsx)(n.h3,{id:"1-\u670d\u52d9\u7aef\u8a2d\u7f6e",children:"1. \u670d\u52d9\u7aef\u8a2d\u7f6e"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from llmbrick.servers.grpc.server import GrpcServer\nimport asyncio\n\nasync def start_grpc_server():\n    # \u5275\u5efa\u670d\u52d9\n    brick = FullFeatureBrick(verbose=True)\n    \n    # \u5275\u5efa gRPC \u670d\u52d9\u5668\n    server = GrpcServer(port=50051)\n    server.register_service(brick)\n    \n    # \u555f\u52d5\u670d\u52d9\u5668\n    await server.start()\n\n# \u904b\u884c\u670d\u52d9\u5668\nasyncio.run(start_grpc_server())\n"})}),"\n",(0,o.jsx)(n.h3,{id:"2-\u5ba2\u6236\u7aef\u4f7f\u7528",children:"2. \u5ba2\u6236\u7aef\u4f7f\u7528"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'async def use_grpc_client():\n    # \u5275\u5efa gRPC \u5ba2\u6236\u7aef\n    client_brick = FullFeatureBrick.toGrpcClient(\n        remote_address="127.0.0.1:50051",\n        verbose=False\n    )\n    \n    try:\n        # \u4f7f\u7528\u8207\u672c\u5730\u76f8\u540c\u7684 API\n        response = await client_brick.run_unary(\n            CommonRequest(data={"value": 25})\n        )\n        print(f"gRPC result: {response.data[\'result\']}")  # 50\n        \n        # \u6d41\u5f0f\u8abf\u7528\u4e5f\u5b8c\u5168\u76f8\u540c\n        async for response in client_brick.run_output_streaming(\n            CommonRequest(data={"count": 3})\n        ):\n            print(f"gRPC stream: {response.data}")\n            \nasyncio.run(use_grpc_client())\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-\u7121\u7e2b\u5207\u63db\u793a\u4f8b",children:"3. \u7121\u7e2b\u5207\u63db\u793a\u4f8b"}),"\n",(0,o.jsxs)(n.p,{children:["\u5207\u63db\u6a5f\u5236\u662f\u900f\u904e ",(0,o.jsx)(n.code,{children:"toGrpcClient()"})," \u985e\u65b9\u6cd5\u5be6\u73fe\u7684\uff0c\u5b83\u6703\u5275\u5efa\u4e00\u500b\u65b0\u7684 Brick \u5be6\u4f8b\uff0c\u8a72\u5be6\u4f8b\u7684\u8655\u7406\u5668\u6703\u81ea\u52d5\u8def\u7531\u5230\u9060\u7a0b gRPC \u670d\u52d9\uff1a"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# \u672c\u5730\u4f7f\u7528 - \u76f4\u63a5\u5275\u5efa\u5be6\u4f8b\nlocal_brick = FullFeatureBrick(verbose=False)\n\n# \u9060\u7a0b\u4f7f\u7528 - \u4f7f\u7528 toGrpcClient \u5275\u5efa gRPC \u5ba2\u6236\u7aef\nremote_brick = FullFeatureBrick.toGrpcClient("127.0.0.1:50051", verbose=False)\n\n# API \u5b8c\u5168\u76f8\u540c\uff0c\u7121\u8ad6\u672c\u5730\u9084\u662f\u9060\u7a0b\nasync def process_data(brick, data):\n    request = CommonRequest(data=data)\n    return await brick.run_unary(request)\n\n# \u4f7f\u7528\u65b9\u5f0f\u5b8c\u5168\u76f8\u540c\nresult1 = await process_data(local_brick, {"value": 10})\nresult2 = await process_data(remote_brick, {"value": 10})\n'})}),"\n",(0,o.jsxs)(n.p,{children:["\u9019\u7a2e\u8a2d\u8a08\u8b93\u958b\u767c\u4eba\u54e1\u53ef\u4ee5\u5728\u4e0d\u4fee\u6539\u696d\u52d9\u908f\u8f2f\u4ee3\u78bc\u7684\u60c5\u6cc1\u4e0b\uff0c\u8f15\u9b06\u5728\u672c\u5730\u548c\u5206\u6563\u5f0f\u90e8\u7f72\u4e4b\u9593\u5207\u63db\u3002\u6240\u6709\u7684 Brick \u985e\u578b\uff08CommonBrick\u3001LLMBrick\u3001GuardBrick \u7b49\uff09\u90fd\u9075\u5faa\u76f8\u540c\u7684\u6a21\u5f0f\uff0c\u90fd\u6709\u81ea\u5df1\u7684 ",(0,o.jsx)(n.code,{children:"toGrpcClient()"})," \u5be6\u73fe\u3002"]}),"\n",(0,o.jsx)(n.h2,{id:"\u6700\u4f73\u5be6\u8e10",children:"\u6700\u4f73\u5be6\u8e10"}),"\n",(0,o.jsx)(n.h3,{id:"1-\u7570\u6b65\u51fd\u6578\u8a2d\u8a08",children:"1. \u7570\u6b65\u51fd\u6578\u8a2d\u8a08"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class BestPracticeBrick(CommonBrick):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.cache = {}\n        self.request_count = 0\n    \n    @unary_handler\n    async def optimized_handler(self, request: CommonRequest) -> CommonResponse:\n        """\u6700\u4f73\u5be6\u8e10\u7684\u8655\u7406\u5668\u5be6\u73fe"""\n        \n        # 1. \u8f38\u5165\u9a57\u8b49\n        if not request.data:\n            return CommonResponse(\n                data={},\n                error=ErrorDetail(code=400, message="Empty request data")\n            )\n        \n        # 2. \u696d\u52d9\u908f\u8f2f\u8655\u7406\n        try:\n            # \u4f7f\u7528\u7de9\u5b58\u63d0\u5347\u6027\u80fd\n            cache_key = str(sorted(request.data.items()))\n            if cache_key in self.cache:\n                result = self.cache[cache_key]\n            else:\n                result = await self._process_business_logic(request.data)\n                self.cache[cache_key] = result\n            \n            # 3. \u72c0\u614b\u66f4\u65b0\n            self.request_count += 1\n            \n            # 4. \u8fd4\u56de\u7d50\u679c\n            return CommonResponse(\n                data={\n                    "result": result,\n                    "processed_at": asyncio.get_event_loop().time(),\n                    "request_id": self.request_count\n                },\n                error=ErrorDetail(code=0, message="Success")\n            )\n            \n        except Exception as e:\n            # 5. \u932f\u8aa4\u8655\u7406\n            return CommonResponse(\n                data={},\n                error=ErrorDetail(\n                    code=500, \n                    message="Processing failed", \n                    detail=str(e)\n                )\n            )\n    \n    async def _process_business_logic(self, data):\n        """\u5206\u96e2\u696d\u52d9\u908f\u8f2f"""\n        await asyncio.sleep(0.01)  # \u6a21\u64ec\u7570\u6b65\u64cd\u4f5c\n        return sum(data.values()) if all(isinstance(v, (int, float)) for v in data.values()) else 0\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-\u932f\u8aa4\u8655\u7406\u7b56\u7565",children:"2. \u932f\u8aa4\u8655\u7406\u7b56\u7565"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class RobustBrick(CommonBrick):\n    @unary_handler\n    async def robust_handler(self, request: CommonRequest) -> CommonResponse:\n        try:\n            # \u696d\u52d9\u908f\u8f2f\n            result = await self._risky_operation(request.data)\n            \n            return CommonResponse(\n                data={"result": result},\n                error=ErrorDetail(code=0, message="Success")\n            )\n            \n        except ValueError as e:\n            # \u5ba2\u6236\u7aef\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorDetail(code=400, message=f"Invalid input: {e}")\n            )\n        except TimeoutError:\n            # \u8d85\u6642\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorDetail(code=408, message="Request timeout")\n            )\n        except Exception as e:\n            # \u670d\u52d9\u5668\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorDetail(code=500, message="Internal server error", detail=str(e))\n            )\n    \n    async def _risky_operation(self, data):\n        # \u53ef\u80fd\u62cb\u51fa\u7570\u5e38\u7684\u64cd\u4f5c\n        if not data:\n            raise ValueError("Data cannot be empty")\n        \n        # \u6a21\u64ec\u53ef\u80fd\u8d85\u6642\u7684\u64cd\u4f5c\n        await asyncio.wait_for(asyncio.sleep(0.1), timeout=1.0)\n        return "processed"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"3-\u6027\u80fd\u512a\u5316",children:"3. \u6027\u80fd\u512a\u5316"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class PerformantBrick(CommonBrick):\n    def __init__(self, **kwargs):\n        super().__init__(**kwargs)\n        self.connection_pool = None  # \u5047\u8a2d\u6709\u9023\u63a5\u6c60\n        self.semaphore = asyncio.Semaphore(10)  # \u9650\u5236\u4e26\u767c\n    \n    @unary_handler\n    async def high_performance_handler(self, request: CommonRequest) -> CommonResponse:\n        # \u4f7f\u7528\u4fe1\u865f\u91cf\u9650\u5236\u4e26\u767c\n        async with self.semaphore:\n            # \u4e26\u884c\u8655\u7406\u591a\u500b\u4efb\u52d9\n            tasks = [\n                self._task_1(request.data),\n                self._task_2(request.data),\n                self._task_3(request.data)\n            ]\n            \n            results = await asyncio.gather(*tasks, return_exceptions=True)\n            \n            # \u8655\u7406\u7d50\u679c\n            processed_results = []\n            for i, result in enumerate(results):\n                if isinstance(result, Exception):\n                    processed_results.append(f"Task {i+1} failed: {result}")\n                else:\n                    processed_results.append(result)\n            \n            return CommonResponse(\n                data={"results": processed_results},\n                error=ErrorDetail(code=0, message="Success")\n            )\n    \n    async def _task_1(self, data):\n        await asyncio.sleep(0.01)\n        return f"Task 1 result: {len(data)}"\n    \n    async def _task_2(self, data):\n        await asyncio.sleep(0.02)\n        return f"Task 2 result: {sum(v for v in data.values() if isinstance(v, (int, float)))}"\n    \n    async def _task_3(self, data):\n        await asyncio.sleep(0.01)\n        return f"Task 3 result: {list(data.keys())}"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u932f\u8aa4\u8655\u7406",children:"\u932f\u8aa4\u8655\u7406"}),"\n",(0,o.jsx)(n.h3,{id:"\u4f7f\u7528\u6846\u67b6\u63d0\u4f9b\u7684errorcodes\u5de5\u5177\u985e",children:"\u4f7f\u7528\u6846\u67b6\u63d0\u4f9b\u7684ErrorCodes\u5de5\u5177\u985e"}),"\n",(0,o.jsxs)(n.p,{children:["\u6846\u67b6\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684",(0,o.jsx)(n.code,{children:"ErrorCodes"}),"\u5de5\u5177\u985e\uff0c\u5305\u542b\u5e38\u7528\u7684HTTP\u72c0\u614b\u78bc\u548c\u696d\u52d9\u932f\u8aa4\u4ee3\u78bc\uff1a"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from llmbrick.core.error_codes import ErrorCodes, ErrorCodeUtils\nfrom llmbrick.protocols.models.bricks.common_types import CommonRequest, CommonResponse\n\nclass StandardErrorBrick(CommonBrick):\n    @unary_handler\n    async def error_demo_handler(self, request: CommonRequest) -> CommonResponse:\n        error_type = request.data.get("error_type")\n        \n        if error_type == "validation":\n            # \u4f7f\u7528\u5de5\u5ee0\u65b9\u6cd5\u5275\u5efa\u9a57\u8b49\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.validation_error(\n                    "\u6578\u64da\u9a57\u8b49\u5931\u6557",\n                    "\u5fc5\u9700\u5b57\u6bb5 \'name\' \u7f3a\u5931"\n                )\n            )\n        elif error_type == "not_found":\n            # \u4f7f\u7528\u7279\u5316\u7684\u5de5\u5ee0\u65b9\u6cd5\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.not_found(\n                    "\u8cc7\u6e90\u672a\u627e\u5230",\n                    "\u7528\u6236 ID 123 \u4e0d\u5b58\u5728"\n                )\n            )\n        elif error_type == "model_error":\n            # \u91dd\u5c0d\u6a21\u578b\u932f\u8aa4\u7684\u5c08\u7528\u65b9\u6cd5\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.model_not_found(\n                    "gpt-4",\n                    "\u6307\u5b9a\u7684\u6a21\u578b\u7576\u524d\u4e0d\u53ef\u7528"\n                )\n            )\n        elif error_type == "parameter":\n            # \u53c3\u6578\u76f8\u95dc\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.parameter_missing(\n                    "user_id",\n                    "\u8acb\u6c42\u4e2d\u5fc5\u9808\u5305\u542b\u7528\u6236ID"\n                )\n            )\n        else:\n            # \u6210\u529f\u97ff\u61c9\n            return CommonResponse(\n                data={"result": "success"},\n                error=None\n            )\n'})}),"\n",(0,o.jsx)(n.h3,{id:"errorcodes\u985e\u5225\u7684\u4e3b\u8981\u7279\u9ede",children:"ErrorCodes\u985e\u5225\u7684\u4e3b\u8981\u7279\u9ede"}),"\n",(0,o.jsx)(n.h4,{id:"1-\u5b8c\u6574\u7684\u932f\u8aa4\u4ee3\u78bc\u9ad4\u7cfb",children:"1. \u5b8c\u6574\u7684\u932f\u8aa4\u4ee3\u78bc\u9ad4\u7cfb"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"# HTTP \u6a19\u6e96\u72c0\u614b\u78bc\nErrorCodes.SUCCESS = 200\nErrorCodes.BAD_REQUEST = 400\nErrorCodes.UNAUTHORIZED = 401\nErrorCodes.NOT_FOUND = 404\nErrorCodes.INTERNAL_ERROR = 500\n\n# \u6846\u67b6\u7279\u5b9a\u696d\u52d9\u932f\u8aa4\u4ee3\u78bc\nErrorCodes.VALIDATION_ERROR = 2000        # \u9a57\u8b49\u932f\u8aa4\nErrorCodes.PARAMETER_MISSING = 2002       # \u53c3\u6578\u7f3a\u5931\nErrorCodes.MODEL_ERROR = 4000             # \u6a21\u578b\u932f\u8aa4\nErrorCodes.MODEL_NOT_FOUND = 4001         # \u6a21\u578b\u672a\u627e\u5230\nErrorCodes.EXTERNAL_SERVICE_ERROR = 5000  # \u5916\u90e8\u670d\u52d9\u932f\u8aa4\nErrorCodes.RESOURCE_NOT_FOUND = 6001      # \u8cc7\u6e90\u672a\u627e\u5230\n"})}),"\n",(0,o.jsx)(n.h4,{id:"2-\u4fbf\u5229\u7684\u5de5\u5ee0\u65b9\u6cd5",children:"2. \u4fbf\u5229\u7684\u5de5\u5ee0\u65b9\u6cd5"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'# \u57fa\u672c\u5de5\u5ee0\u65b9\u6cd5\nerror = ErrorCodes.create_error(\n    ErrorCodes.BAD_REQUEST,\n    "\u81ea\u5b9a\u7fa9\u932f\u8aa4\u8a0a\u606f",\n    "\u8a73\u7d30\u932f\u8aa4\u4fe1\u606f"\n)\n\n# \u5e38\u7528\u932f\u8aa4\u7684\u5feb\u6377\u65b9\u6cd5\nbad_request = ErrorCodes.bad_request("\u8acb\u6c42\u683c\u5f0f\u932f\u8aa4")\nnot_found = ErrorCodes.not_found("\u8cc7\u6e90\u4e0d\u5b58\u5728")\ninternal_error = ErrorCodes.internal_error("\u7cfb\u7d71\u932f\u8aa4")\n\n# \u7279\u5316\u7684\u932f\u8aa4\u65b9\u6cd5\nmodel_error = ErrorCodes.model_not_found("gpt-4", "\u6a21\u578b\u670d\u52d9\u4e0d\u53ef\u7528")\nparam_error = ErrorCodes.parameter_missing("user_id")\nexternal_error = ErrorCodes.external_service_error("OpenAI API")\n'})}),"\n",(0,o.jsx)(n.h4,{id:"3-\u932f\u8aa4\u5206\u985e\u5de5\u5177",children:"3. \u932f\u8aa4\u5206\u985e\u5de5\u5177"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from llmbrick.core.error_codes import ErrorCodeUtils\n\n# \u6aa2\u67e5\u932f\u8aa4\u985e\u578b\nis_success = ErrorCodeUtils.is_success(200)          # True\nis_client_error = ErrorCodeUtils.is_client_error(400)  # True\nis_server_error = ErrorCodeUtils.is_server_error(500)  # True\n\n# \u7372\u53d6\u932f\u8aa4\u5206\u985e\ncategory = ErrorCodeUtils.get_error_category(2000)  # "\u9a57\u8b49\u932f\u8aa4"\ncategory = ErrorCodeUtils.get_error_category(4001)  # "\u6a21\u578b\u932f\u8aa4"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"\u5be6\u969b\u4f7f\u7528\u7bc4\u4f8b",children:"\u5be6\u969b\u4f7f\u7528\u7bc4\u4f8b"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class PracticalErrorBrick(CommonBrick):\n    @unary_handler\n    async def comprehensive_handler(self, request: CommonRequest) -> CommonResponse:\n        try:\n            # \u8f38\u5165\u9a57\u8b49\n            if not request.data.get("input"):\n                return CommonResponse(\n                    data={},\n                    error=ErrorCodes.parameter_missing("input", "\u8655\u7406\u6578\u64da\u4e0d\u80fd\u70ba\u7a7a")\n                )\n            \n            # \u696d\u52d9\u908f\u8f2f\u8655\u7406\n            result = await self._process_data(request.data)\n            \n            return CommonResponse(\n                data={"result": result},\n                error=None\n            )\n            \n        except ValueError as e:\n            # \u53c3\u6578\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.parameter_invalid("input", str(e))\n            )\n        except TimeoutError:\n            # \u8d85\u6642\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.create_error(\n                    ErrorCodes.REQUEST_TIMEOUT,\n                    "\u8655\u7406\u8d85\u6642",\n                    "\u8acb\u6c42\u8655\u7406\u6642\u9593\u8d85\u904e\u9650\u5236"\n                )\n            )\n        except Exception as e:\n            # \u7cfb\u7d71\u932f\u8aa4\n            return CommonResponse(\n                data={},\n                error=ErrorCodes.internal_error("\u7cfb\u7d71\u8655\u7406\u932f\u8aa4", str(e))\n            )\n    \n    async def _process_data(self, data):\n        # \u6a21\u64ec\u696d\u52d9\u8655\u7406\n        if data.get("input") == "invalid":\n            raise ValueError("\u4e0d\u652f\u63f4\u7684\u8f38\u5165\u503c")\n        return f"\u8655\u7406\u7d50\u679c: {data.get(\'input\')}"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u6027\u80fd\u8003\u616e",children:"\u6027\u80fd\u8003\u616e"}),"\n",(0,o.jsx)(n.h3,{id:"1-\u4e26\u767c\u8655\u7406",children:"1. \u4e26\u767c\u8655\u7406"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'import asyncio\nfrom asyncio import Semaphore\n\nclass ConcurrentBrick(CommonBrick):\n    def __init__(self, max_concurrent=100, **kwargs):\n        super().__init__(**kwargs)\n        self.semaphore = Semaphore(max_concurrent)\n    \n    @output_streaming_handler\n    async def concurrent_stream(self, request: CommonRequest) -> AsyncIterator[CommonResponse]:\n        items = request.data.get("items", [])\n        \n        async def process_item(item):\n            async with self.semaphore:\n                await asyncio.sleep(0.1)  # \u6a21\u64ec\u8655\u7406\u6642\u9593\n                return {"item": item, "processed": True}\n        \n        # \u4e26\u767c\u8655\u7406\u6240\u6709\u9805\u76ee\n        tasks = [process_item(item) for item in items]\n        \n        # \u4f7f\u7528 as_completed \u4f86\u6d41\u5f0f\u8fd4\u56de\u7d50\u679c\n        for coro in asyncio.as_completed(tasks):\n            result = await coro\n            yield CommonResponse(\n                data=result,\n                error=ErrorDetail(code=0, message="Success")\n            )\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-\u5167\u5b58\u7ba1\u7406",children:"2. \u5167\u5b58\u7ba1\u7406"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class MemoryEfficientBrick(CommonBrick):\n    @input_streaming_handler\n    async def memory_efficient_handler(self, request_stream: AsyncIterator[CommonRequest]) -> CommonResponse:\n        # \u4f7f\u7528\u751f\u6210\u5668\u907f\u514d\u5c07\u6240\u6709\u6578\u64da\u52a0\u8f09\u5230\u5167\u5b58\n        total = 0\n        count = 0\n        \n        # \u5206\u6279\u8655\u7406\u4ee5\u63a7\u5236\u5167\u5b58\u4f7f\u7528\n        batch_size = 100\n        batch = []\n        \n        async for request in request_stream:\n            batch.append(request.data.get("value", 0))\n            \n            if len(batch) >= batch_size:\n                # \u8655\u7406\u6279\u6b21\n                batch_sum = sum(batch)\n                total += batch_sum\n                count += len(batch)\n                batch.clear()  # \u6e05\u7406\u5167\u5b58\n        \n        # \u8655\u7406\u5269\u9918\u7684\u6578\u64da\n        if batch:\n            total += sum(batch)\n            count += len(batch)\n        \n        return CommonResponse(\n            data={"total": total, "count": count, "average": total/count if count > 0 else 0},\n            error=ErrorDetail(code=0, message="Success")\n        )\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u5e38\u898b\u554f\u984c",children:"\u5e38\u898b\u554f\u984c"}),"\n",(0,o.jsx)(n.h3,{id:"q1-\u5982\u4f55\u8655\u7406\u9577\u6642\u9593\u904b\u884c\u7684\u4efb\u52d9",children:"Q1: \u5982\u4f55\u8655\u7406\u9577\u6642\u9593\u904b\u884c\u7684\u4efb\u52d9\uff1f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class LongRunningBrick(CommonBrick):\n    @output_streaming_handler\n    async def long_task(self, request: CommonRequest) -> AsyncIterator[CommonResponse]:\n        total_steps = request.data.get("steps", 100)\n        \n        for step in range(total_steps):\n            # \u57f7\u884c\u6b65\u9a5f\n            await asyncio.sleep(0.1)\n            \n            # \u5b9a\u671f\u5831\u544a\u9032\u5ea6\n            progress = (step + 1) / total_steps * 100\n            yield CommonResponse(\n                data={\n                    "step": step + 1,\n                    "total_steps": total_steps,\n                    "progress": f"{progress:.1f}%",\n                    "completed": step + 1 == total_steps\n                },\n                error=ErrorDetail(code=0, message="Success")\n            )\n'})}),"\n",(0,o.jsx)(n.h3,{id:"q2-\u5982\u4f55\u5be6\u73fe\u8d85\u6642\u63a7\u5236",children:"Q2: \u5982\u4f55\u5be6\u73fe\u8d85\u6642\u63a7\u5236\uff1f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class TimeoutBrick(CommonBrick):\n    @unary_handler\n    async def timeout_handler(self, request: CommonRequest) -> CommonResponse:\n        timeout = request.data.get("timeout", 5.0)\n        \n        try:\n            # \u4f7f\u7528 asyncio.wait_for \u5be6\u73fe\u8d85\u6642\u63a7\u5236\n            result = await asyncio.wait_for(\n                self._slow_operation(request.data),\n                timeout=timeout\n            )\n            \n            return CommonResponse(\n                data={"result": result},\n                error=ErrorDetail(code=0, message="Success")\n            )\n            \n        except asyncio.TimeoutError:\n            return CommonResponse(\n                data={},\n                error=ErrorDetail(\n                    code=408,\n                    message="Request timeout",\n                    detail=f"Operation exceeded {timeout} seconds"\n                )\n            )\n    \n    async def _slow_operation(self, data):\n        # \u6a21\u64ec\u6162\u64cd\u4f5c\n        delay = data.get("delay", 1.0)\n        await asyncio.sleep(delay)\n        return f"Completed after {delay} seconds"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"q3-\u5982\u4f55\u5be6\u73fe\u91cd\u8a66\u6a5f\u5236",children:"Q3: \u5982\u4f55\u5be6\u73fe\u91cd\u8a66\u6a5f\u5236\uff1f"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'class RetryBrick(CommonBrick):\n    @unary_handler\n    async def retry_handler(self, request: CommonRequest) -> CommonResponse:\n        max_retries = request.data.get("max_retries", 3)\n        \n        for attempt in range(max_retries + 1):\n            try:\n                result = await self._unreliable_operation(request.data)\n                return CommonResponse(\n                    data={"result": result, "attempts": attempt + 1},\n                    error=ErrorDetail(code=0, message="Success")\n                )\n                \n            except Exception as e:\n                if attempt == max_retries:\n                    # \u6700\u5f8c\u4e00\u6b21\u5617\u8a66\u5931\u6557\n                    return CommonResponse(\n                        data={},\n                        error=ErrorDetail(\n                            code=500,\n                            message="Operation failed after retries",\n                            detail=f"Failed after {max_retries + 1} attempts: {e}"\n                        )\n                    )\n                \n                # \u7b49\u5f85\u5f8c\u91cd\u8a66\n                await asyncio.sleep(2 ** attempt)  # \u6307\u6578\u9000\u907f\n    \n    async def _unreliable_operation(self, data):\n        # \u6a21\u64ec\u4e0d\u53ef\u9760\u7684\u64cd\u4f5c\n        import random\n        if random.random() < 0.7:  # 70% \u5931\u6557\u7387\n            raise Exception("Random failure")\n        return "Success!"\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u7e3d\u7d50",children:"\u7e3d\u7d50"}),"\n",(0,o.jsx)(n.p,{children:"CommonBrick \u63d0\u4f9b\u4e86\u4e00\u500b\u5f37\u5927\u4e14\u9748\u6d3b\u7684\u6846\u67b6\u4f86\u69cb\u5efa\u7570\u6b65\u670d\u52d9\uff0c\u5176\u4e3b\u8981\u512a\u9ede\u5305\u62ec\uff1a"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u7d71\u4e00\u7684 API"}),": \u672c\u5730\u548c\u9060\u7a0b\u8abf\u7528\u4f7f\u7528\u76f8\u540c\u7684\u4ecb\u9762"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u8c50\u5bcc\u7684\u8655\u7406\u6a21\u5f0f"}),": \u652f\u63f4\u56db\u7a2e\u4e0d\u540c\u7684\u8655\u7406\u6a21\u5f0f"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u512a\u96c5\u7684\u932f\u8aa4\u8655\u7406"}),": \u5167\u5efa\u932f\u8aa4\u8655\u7406\u548c\u5831\u544a\u6a5f\u5236"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u9ad8\u6027\u80fd"}),": \u57fa\u65bc asyncio \u7684\u9ad8\u6027\u80fd\u7570\u6b65\u8655\u7406"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"\u6613\u65bc\u6e2c\u8a66"}),": \u6e05\u6670\u7684\u4ecb\u9762\u548c\u8c50\u5bcc\u7684\u6e2c\u8a66\u5de5\u5177"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"\u901a\u904e\u9075\u5faa\u672c\u6307\u5357\u4e2d\u7684\u6700\u4f73\u5be6\u8e10\uff0c\u60a8\u53ef\u4ee5\u69cb\u5efa\u51fa\u9ad8\u6548\u3001\u53ef\u9760\u4e14\u6613\u65bc\u7dad\u8b77\u7684\u670d\u52d9\u3002"})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>i});var s=r(6540);const o={},t=s.createContext(o);function a(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);