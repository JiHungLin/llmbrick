"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[905],{6072:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"quickstart/common_brick_define","title":"common_brick_define","description":"GitHub \u7bc4\u4f8b\u7a0b\u5f0f\u78bc","source":"@site/docs/quickstart/common_brick_define.md","sourceDirName":"quickstart","slug":"/quickstart/common_brick_define","permalink":"/llmbrick/docs/quickstart/common_brick_define","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"\u901a\u7528\u578b CommonBrick \u5b9a\u7fa9"},"sidebar":"quickstartSidebar","previous":{"title":"SSE Server \u5feb\u901f\u4e0a\u624b","permalink":"/llmbrick/docs/quickstart/sse_server_setup"},"next":{"title":"\u9632\u8b77\u578b GuardBrick \u5b9a\u7fa9","permalink":"/llmbrick/docs/quickstart/guard_brick_define"}}');var t=r(4848),s=r(8453);const o={sidebar_position:1,sidebar_label:"\u901a\u7528\u578b CommonBrick \u5b9a\u7fa9"},c="\u5b9a\u7fa9\u8207\u4f7f\u7528 CommonBrick",d={},a=[{value:"\u4ec0\u9ebc\u662f CommonBrick\uff1f",id:"\u4ec0\u9ebc\u662f-commonbrick",level:2},{value:"1. \u5be6\u4f5c\u81ea\u8a02 CommonBrick",id:"1-\u5be6\u4f5c\u81ea\u8a02-commonbrick",level:2},{value:"2. \u672c\u5730\u7aef\u547c\u53eb\u7bc4\u4f8b",id:"2-\u672c\u5730\u7aef\u547c\u53eb\u7bc4\u4f8b",level:2},{value:"\u5e38\u898b\u932f\u8aa4\u8655\u7406",id:"\u5e38\u898b\u932f\u8aa4\u8655\u7406",level:3},{value:"3. \u4ee5 gRPC \u65b9\u5f0f\u63d0\u4f9b\u670d\u52d9",id:"3-\u4ee5-grpc-\u65b9\u5f0f\u63d0\u4f9b\u670d\u52d9",level:2},{value:"\u555f\u52d5 gRPC \u4f3a\u670d\u5668",id:"\u555f\u52d5-grpc-\u4f3a\u670d\u5668",level:3},{value:"4. \u4ee5 gRPC Client \u547c\u53eb\u9060\u7aef Brick",id:"4-\u4ee5-grpc-client-\u547c\u53eb\u9060\u7aef-brick",level:2},{value:"5. \u65b9\u6cd5\u578b\u614b\u7e3d\u89bd",id:"5-\u65b9\u6cd5\u578b\u614b\u7e3d\u89bd",level:2},{value:"6. \u5be6\u4f5c\u5efa\u8b70\u8207\u6700\u4f73\u5be6\u8e10",id:"6-\u5be6\u4f5c\u5efa\u8b70\u8207\u6700\u4f73\u5be6\u8e10",level:2},{value:"7. \u5b8c\u6574\u7bc4\u4f8b\u7a0b\u5f0f\u78bc",id:"7-\u5b8c\u6574\u7bc4\u4f8b\u7a0b\u5f0f\u78bc",level:2},{value:"8. \u5e38\u898b\u554f\u984c",id:"8-\u5e38\u898b\u554f\u984c",level:2}];function l(n){const e={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://github.com/JiHungLin/llmbrick/tree/main/examples/common_brick_define",children:"GitHub \u7bc4\u4f8b\u7a0b\u5f0f\u78bc"})}),"\n",(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"\u5b9a\u7fa9\u8207\u4f7f\u7528-commonbrick",children:"\u5b9a\u7fa9\u8207\u4f7f\u7528 CommonBrick"})}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u6559\u5b78\u5c07\u8a73\u7d30\u8aaa\u660e\u5982\u4f55\u5728 LLMBrick \u6846\u67b6\u4e2d\u81ea\u8a02\u3001\u5be6\u4f5c\u4e26\u4f7f\u7528\u901a\u7528\u578b CommonBrick\u3002\u5167\u5bb9\u6db5\u84cb\u672c\u5730\u7aef\u547c\u53eb\u8207 gRPC \u670d\u52d9\u5169\u7a2e\u60c5\u5883\uff0c\u4e26\u91dd\u5c0d\u5404\u7a2e\u5e38\u898b\u65b9\u6cd5\u578b\u614b\uff08Unary\u3001Input Streaming\u3001Output Streaming\u3001Bidirectional Streaming\u3001Service Info\uff09\u63d0\u4f9b\u5b8c\u6574\u7bc4\u4f8b\u8207\u8aaa\u660e\u3002"}),"\n",(0,t.jsx)(e.h2,{id:"\u4ec0\u9ebc\u662f-commonbrick",children:"\u4ec0\u9ebc\u662f CommonBrick\uff1f"}),"\n",(0,t.jsx)(e.p,{children:"CommonBrick \u662f LLMBrick \u6846\u67b6\u4e2d\u6700\u57fa\u790e\u3001\u6700\u901a\u7528\u7684 Brick \u985e\u578b\uff0c\u9069\u5408\u7528\u4f86\u5be6\u4f5c\u5404\u7a2e\u81ea\u8a02\u7684 AI/LLM \u529f\u80fd\u6a21\u7d44\u3002\u5b83\u9810\u8a2d\u652f\u63f4\u591a\u7a2e RPC \u65b9\u6cd5\u578b\u614b\uff0c\u4e26\u53ef\u8f15\u9b06\u64f4\u5145\u3001\u4e32\u63a5\u81f3\u672c\u5730\u6216\u9060\u7aef\u670d\u52d9\u3002"}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"1-\u5be6\u4f5c\u81ea\u8a02-commonbrick",children:"1. \u5be6\u4f5c\u81ea\u8a02 CommonBrick"}),"\n",(0,t.jsxs)(e.p,{children:["\u9996\u5148\uff0c\u5efa\u7acb\u4e00\u500b\u7e7c\u627f\u81ea ",(0,t.jsx)(e.code,{children:"CommonBrick"})," \u7684\u81ea\u8a02\u985e\u5225\uff0c\u4e26\u5be6\u4f5c\u5404\u7a2e\u65b9\u6cd5\uff1a"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# examples/common_brick_define/my_brick.py\nfrom typing import AsyncIterator\nfrom llmbrick.bricks.common import CommonBrick\nfrom llmbrick.protocols.models.bricks.common_types import CommonRequest, CommonResponse, ErrorDetail, ServiceInfoResponse, ModelInfo\nfrom llmbrick.core.error_codes import ErrorCodes\nfrom llmbrick.core.brick import (\n    unary_handler,\n    input_streaming_handler,\n    output_streaming_handler,\n    bidi_streaming_handler,\n    get_service_info_handler\n)\n\nclass MyBrick(CommonBrick):\n    def __init__(self, my_init_data: str = "", res_prefix: str = "my_brick", **kwargs):\n        super().__init__(**kwargs)\n        self.my_init_data = my_init_data\n        self.res_prefix = res_prefix\n\n    @unary_handler\n    async def unary_method(self, input_data: CommonRequest) -> CommonResponse:\n        # \u55ae\u6b21\u8acb\u6c42/\u56de\u61c9\n        output = input_data.data.get("text", "")\n        if not output:\n            error = ErrorDetail(code=ErrorCodes.PARAMETER_INVALID, message="Input text is required.")\n            response = CommonResponse(error=error)\n        else:\n            response = CommonResponse(data={"text": output})\n        return response\n\n    @input_streaming_handler\n    async def input_streaming_method(self, input_stream: AsyncIterator[CommonRequest]) -> CommonResponse:\n        # \u8f38\u5165\u4e32\u6d41\uff0c\u56de\u50b3\u55ae\u4e00\u7d50\u679c\n        has_empty_input = False\n        input_data_list = []\n        async for input_data in input_stream:\n            text = input_data.data.get("text", "")\n            if not text:\n                has_empty_input = True\n            input_data_list.append(text)\n        if has_empty_input:\n            error = ErrorDetail(code=ErrorCodes.PARAMETER_INVALID, message="Input text is required.")\n            return CommonResponse(error=error)\n        output = "Processed input stream with {} items. Full text: {}".format(len(input_data_list), " ".join(input_data_list))\n        return CommonResponse(data={"text": output})\n\n    @output_streaming_handler\n    async def output_streaming_method(self, input_data: CommonRequest) -> AsyncIterator[CommonResponse]:\n        # \u8f38\u5165\u55ae\u4e00\u8acb\u6c42\uff0c\u56de\u50b3\u4e32\u6d41\u7d50\u679c\n        text = input_data.data.get("text", "")\n        if not text:\n            error = ErrorDetail(code=ErrorCodes.PARAMETER_INVALID, message="Input text is required.")\n            yield CommonResponse(error=error)\n            return\n        for i in range(5):\n            yield CommonResponse(data={"text": f"{text} - part {i + 1}"})\n\n    @bidi_streaming_handler\n    async def bidi_streaming_method(self, stream: AsyncIterator[CommonRequest]) -> AsyncIterator[CommonResponse]:\n        # \u96d9\u5411\u4e32\u6d41\n        async for input_data in stream:\n            text = input_data.data.get("text", "")\n            if not text:\n                error = ErrorDetail(code=ErrorCodes.PARAMETER_INVALID, message="Input text is required.")\n                yield CommonResponse(error=error)\n                continue\n            yield CommonResponse(data={"text": f"Received: {text}"})\n\n    @get_service_info_handler\n    async def get_service_info_method(self) -> ServiceInfoResponse:\n        # \u56de\u50b3\u670d\u52d9\u8cc7\u8a0a\n        model_info_list = [\n            ModelInfo(\n                model_id="my_brick_model",\n                version="1.0",\n                supported_languages=["en", "zh"],\n                support_streaming=True,\n                description="A model for MyBrick that processes text input and streams output."\n            )\n        ]\n        return ServiceInfoResponse(\n            service_name="MyBrickService",\n            version="1.0",\n            models=model_info_list,\n            error=None\n        )\n'})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"2-\u672c\u5730\u7aef\u547c\u53eb\u7bc4\u4f8b",children:"2. \u672c\u5730\u7aef\u547c\u53eb\u7bc4\u4f8b"}),"\n",(0,t.jsx)(e.p,{children:"\u76f4\u63a5\u65bc Python \u7a0b\u5f0f\u4e2d\u5be6\u4f8b\u5316\u4e26\u547c\u53eb Brick\uff0c\u9069\u5408\u55ae\u5143\u6e2c\u8a66\u6216\u5d4c\u5165\u5f0f\u61c9\u7528\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# examples/common_brick_define/local_use.py\nfrom llmbrick.protocols.models.bricks.common_types import CommonRequest\nfrom my_brick import MyBrick\nimport asyncio\n\nasync def main():\n    my_brick = MyBrick(my_init_data="Initialization data for local use")\n\n    print("=== Get Service Info ===")\n    service_info = await my_brick.run_get_service_info()\n    print(service_info)\n\n    print("\\n\\n=== Unary Method ===")\n    request = CommonRequest(data={"text": "Hello, World!"})\n    response = await my_brick.run_unary(request)\n    print(response)\n\n    print("\\n\\n=== Input Streaming Method ===")\n    async def input_stream():\n        for i in range(3):\n            yield CommonRequest(data={"text": f"Input {i + 1}"})\n    response = await my_brick.run_input_streaming(input_stream())\n    print(response)\n\n    print("\\n\\n=== Output Streaming Method ===")\n    request = CommonRequest(data={"text": "Streaming output"})\n    async for response in my_brick.run_output_streaming(request):\n        print(response)\n\n    print("\\n\\n=== Bidirectional Streaming Method ===")\n    async def bidi_input_stream():\n        for i in range(3):\n            yield CommonRequest(data={"text": f"Bidirectional input {i + 1}"})\n    async for response in my_brick.run_bidi_streaming(bidi_input_stream()):\n        print(response)\n\nif __name__ == "__main__":\n    asyncio.run(main())\n'})}),"\n",(0,t.jsx)(e.h3,{id:"\u5e38\u898b\u932f\u8aa4\u8655\u7406",children:"\u5e38\u898b\u932f\u8aa4\u8655\u7406"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["\u8f38\u5165\u8cc7\u6599\u4e0d\u6b63\u78ba\u6642\uff0c\u6703\u56de\u50b3\u5e36\u6709 ",(0,t.jsx)(e.code,{children:"error"})," \u6b04\u4f4d\u7684 ",(0,t.jsx)(e.code,{children:"CommonResponse"}),"\uff0c\u53ef\u64da\u6b64\u9032\u884c\u4f8b\u5916\u8655\u7406\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"3-\u4ee5-grpc-\u65b9\u5f0f\u63d0\u4f9b\u670d\u52d9",children:"3. \u4ee5 gRPC \u65b9\u5f0f\u63d0\u4f9b\u670d\u52d9"}),"\n",(0,t.jsx)(e.h3,{id:"\u555f\u52d5-grpc-\u4f3a\u670d\u5668",children:"\u555f\u52d5 gRPC \u4f3a\u670d\u5668"}),"\n",(0,t.jsx)(e.p,{children:"\u5c07\u81ea\u8a02 Brick \u8a3b\u518a\u5230 gRPC \u4f3a\u670d\u5668\uff0c\u5c0d\u5916\u63d0\u4f9b\u9060\u7aef\u547c\u53eb\uff1a"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# examples/common_brick_define/grpc_server.py\nfrom my_brick import MyBrick\nfrom llmbrick.servers.grpc.server import GrpcServer\n\ngrpc_server = GrpcServer(port=50051)\nmy_brick = MyBrick(\n    my_init_data="Initialization data for gRPC server",\n    res_prefix="From gRPC server"\n)\ngrpc_server.register_service(my_brick)\n\nif __name__ == "__main__":\n    import asyncio\n    asyncio.run(grpc_server.start())\n'})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"4-\u4ee5-grpc-client-\u547c\u53eb\u9060\u7aef-brick",children:"4. \u4ee5 gRPC Client \u547c\u53eb\u9060\u7aef Brick"}),"\n",(0,t.jsxs)(e.p,{children:["\u53ef\u900f\u904e ",(0,t.jsx)(e.code,{children:"CommonBrick.toGrpcClient"})," \u7522\u751f\u9060\u7aef\u4ee3\u7406\u7269\u4ef6\uff0c\u4e26\u4ee5 async \u65b9\u5f0f\u547c\u53eb\u5404\u7a2e\u65b9\u6cd5\uff1a"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:'# examples/common_brick_define/grpc_client.py\nfrom my_brick import CommonRequest\nfrom llmbrick.bricks.common import CommonBrick\n\nif __name__ == "__main__":\n    my_brick = CommonBrick.toGrpcClient(remote_address="127.0.0.1:50051")\n    import asyncio\n\n    print("=== Get Service Info ===")\n    async def get_info():\n        service_info = await my_brick.run_get_service_info()\n        print(service_info)\n    asyncio.run(get_info())\n\n    print("\\n\\n=== Unary Method ===")\n    async def unary_example():\n        request = CommonRequest(data={"text": "Hello, World!"})\n        response = await my_brick.run_unary(request)\n        print(response)\n    asyncio.run(unary_example())\n\n    # \u5176\u9918 Input/Output/Bidirectional Streaming \u65b9\u6cd5\u7528\u6cd5\u540c\u672c\u5730\u7aef\uff0c\u50c5\u9700\u5c07 my_brick \u63db\u6210 gRPC client \u4ee3\u7406\u7269\u4ef6\u5373\u53ef\n'})}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"5-\u65b9\u6cd5\u578b\u614b\u7e3d\u89bd",children:"5. \u65b9\u6cd5\u578b\u614b\u7e3d\u89bd"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"\u65b9\u6cd5\u578b\u614b"}),(0,t.jsx)(e.th,{children:"\u88dd\u98fe\u5668"}),(0,t.jsx)(e.th,{children:"\u8aaa\u660e"}),(0,t.jsx)(e.th,{children:"\u7bc4\u4f8b\u547c\u53eb\u65b9\u5f0f"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Unary"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"@unary_handler"})}),(0,t.jsx)(e.td,{children:"\u4e00\u6b21\u8acb\u6c42/\u56de\u61c9"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"await run_unary(request)"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Input Streaming"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"@input_streaming_handler"})}),(0,t.jsx)(e.td,{children:"\u591a\u6b21\u8f38\u5165\uff0c\u55ae\u4e00\u56de\u61c9"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"await run_input_streaming(stream)"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Output Streaming"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"@output_streaming_handler"})}),(0,t.jsx)(e.td,{children:"\u4e00\u6b21\u8f38\u5165\uff0c\u591a\u6b21\u56de\u61c9"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"async for r in run_output_streaming(request)"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Bidirectional Streaming"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"@bidi_streaming_handler"})}),(0,t.jsx)(e.td,{children:"\u591a\u6b21\u8f38\u5165\uff0c\u591a\u6b21\u56de\u61c9"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"async for r in run_bidi_streaming(stream)"})})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:"Service Info"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"@get_service_info_handler"})}),(0,t.jsx)(e.td,{children:"\u67e5\u8a62\u670d\u52d9\u8cc7\u8a0a"}),(0,t.jsx)(e.td,{children:(0,t.jsx)(e.code,{children:"await run_get_service_info()"})})]})]})]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"6-\u5be6\u4f5c\u5efa\u8b70\u8207\u6700\u4f73\u5be6\u8e10",children:"6. \u5be6\u4f5c\u5efa\u8b70\u8207\u6700\u4f73\u5be6\u8e10"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u578b\u5225\u8a3b\u8a18"}),"\uff1a\u5efa\u8b70\u660e\u78ba\u6a19\u8a3b\u6240\u6709\u65b9\u6cd5\u7684\u8f38\u5165/\u8f38\u51fa\u578b\u5225\uff0c\u63d0\u5347\u53ef\u8b80\u6027\u8207\u7dad\u8b77\u6027\u3002"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u932f\u8aa4\u8655\u7406"}),"\uff1a\u5584\u7528 ",(0,t.jsx)(e.code,{children:"ErrorDetail"})," \u56de\u50b3\u6a19\u6e96\u5316\u932f\u8aa4\u8cc7\u8a0a\uff0c\u65b9\u4fbf\u524d\u5f8c\u7aef\u5354\u4f5c\u3002"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u975e\u540c\u6b65\u8a2d\u8a08"}),"\uff1a\u6240\u6709\u65b9\u6cd5\u7686\u5efa\u8b70\u4f7f\u7528 async/await\uff0c\u78ba\u4fdd\u9ad8\u6548\u80fd\u8207\u53ef\u64f4\u5145\u6027\u3002"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"\u4e32\u6d41\u8655\u7406"}),"\uff1a\u4e32\u6d41\u65b9\u6cd5\u53ef\u7528\u65bc\u5927\u91cf\u8cc7\u6599\u3001\u9577\u6642\u9593\u4efb\u52d9\u7b49\u5834\u666f\uff0c\u5584\u7528 async generator\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"7-\u5b8c\u6574\u7bc4\u4f8b\u7a0b\u5f0f\u78bc",children:"7. \u5b8c\u6574\u7bc4\u4f8b\u7a0b\u5f0f\u78bc"}),"\n",(0,t.jsxs)(e.p,{children:["\u8acb\u53c3\u8003 ",(0,t.jsx)(e.a,{href:"https://github.com/JiHungLin/llmbrick/tree/main/examples/common_brick_define",children:(0,t.jsx)(e.code,{children:"examples/common_brick_define/"})})," \u76ee\u9304\u4e0b\u7684\u5b8c\u6574\u7bc4\u4f8b\uff0c\u5305\u542b\u672c\u5730\u7aef\u8207 gRPC \u5169\u7a2e\u7528\u6cd5\uff0c\u4e26\u6db5\u84cb\u6240\u6709\u5e38\u898b\u65b9\u6cd5\u578b\u614b\u3002"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.h2,{id:"8-\u5e38\u898b\u554f\u984c",children:"8. \u5e38\u898b\u554f\u984c"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:"Q: \u5982\u4f55\u64f4\u5145\u81ea\u8a02\u6b04\u4f4d\uff1f"}),(0,t.jsx)(e.br,{}),"\n","A: \u65bc ",(0,t.jsx)(e.code,{children:"MyBrick.__init__"})," \u6216\u5404\u65b9\u6cd5\u4e2d\u81ea\u8a02\u5c6c\u6027\u8207\u908f\u8f2f\u5373\u53ef\uff0c\u4e26\u53ef\u900f\u904e ",(0,t.jsx)(e.code,{children:"CommonRequest.data"})," \u50b3\u905e\u4efb\u610f\u7d50\u69cb\u8cc7\u6599\u3002"]}),"\n"]}),"\n",(0,t.jsx)(e.hr,{}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u6559\u5b78\u6db5\u84cb\u4e86 CommonBrick \u7684\u5b8c\u6574\u5b9a\u7fa9\u3001\u5be6\u4f5c\u8207\u4f7f\u7528\u6d41\u7a0b\uff0c\u9069\u5408\u521d\u5b78\u8005\u8207\u9032\u968e\u958b\u767c\u8005\u5feb\u901f\u4e0a\u624b LLMBrick \u6846\u67b6\u7684\u81ea\u8a02\u6a21\u7d44\u958b\u767c\u3002"})]})}function m(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>o,x:()=>c});var i=r(6540);const t={},s=i.createContext(t);function o(n){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);