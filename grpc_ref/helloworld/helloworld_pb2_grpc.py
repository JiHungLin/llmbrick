# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from pb2.helloworld import helloworld_pb2 as pb2_dot_helloworld_dot_helloworld__pb2

GRPC_GENERATED_VERSION = "1.73.1"
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower

    _version_not_supported = first_version_is_lower(
        GRPC_VERSION, GRPC_GENERATED_VERSION
    )
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f"The grpc package installed is at version {GRPC_VERSION},"
        + " but the generated code in pb2/helloworld/helloworld_pb2_grpc.py depends on"
        + f" grpcio>={GRPC_GENERATED_VERSION}."
        + f" Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}"
        + f" or downgrade your generated code using grpcio-tools<={GRPC_VERSION}."
    )


class GreeterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
            "/Greeter/SayHello",
            request_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )
        self.SayHelloManyTimes = channel.unary_stream(
            "/Greeter/SayHelloManyTimes",
            request_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )
        self.SayHelloClientStream = channel.stream_unary(
            "/Greeter/SayHelloClientStream",
            request_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )
        self.SayHelloBidirectional = channel.stream_stream(
            "/Greeter/SayHelloBidirectional",
            request_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )
        self.SayHelloWithStruct = channel.unary_unary(
            "/Greeter/SayHelloWithStruct",
            request_serializer=google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )
        self.SayComplexHello = channel.unary_unary(
            "/Greeter/SayComplexHello",
            request_serializer=pb2_dot_helloworld_dot_helloworld__pb2.ComplexRequest.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )
        self.SayComplexHelloStream = channel.stream_unary(
            "/Greeter/SayComplexHelloStream",
            request_serializer=pb2_dot_helloworld_dot_helloworld__pb2.ComplexRequest.SerializeToString,
            response_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            _registered_method=True,
        )


class GreeterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SayHello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SayHelloManyTimes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SayHelloClientStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SayHelloBidirectional(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SayHelloWithStruct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SayComplexHello(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SayComplexHelloStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "SayHello": grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
        "SayHelloManyTimes": grpc.unary_stream_rpc_method_handler(
            servicer.SayHelloManyTimes,
            request_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
        "SayHelloClientStream": grpc.stream_unary_rpc_method_handler(
            servicer.SayHelloClientStream,
            request_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
        "SayHelloBidirectional": grpc.stream_stream_rpc_method_handler(
            servicer.SayHelloBidirectional,
            request_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
        "SayHelloWithStruct": grpc.unary_unary_rpc_method_handler(
            servicer.SayHelloWithStruct,
            request_deserializer=google_dot_protobuf_dot_struct__pb2.Struct.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
        "SayComplexHello": grpc.unary_unary_rpc_method_handler(
            servicer.SayComplexHello,
            request_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.ComplexRequest.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
        "SayComplexHelloStream": grpc.stream_unary_rpc_method_handler(
            servicer.SayComplexHelloStream,
            request_deserializer=pb2_dot_helloworld_dot_helloworld__pb2.ComplexRequest.FromString,
            response_serializer=pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "Greeter", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers("Greeter", rpc_method_handlers)


# This class is part of an EXPERIMENTAL API.
class Greeter(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SayHello(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Greeter/SayHello",
            pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SayHelloManyTimes(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_stream(
            request,
            target,
            "/Greeter/SayHelloManyTimes",
            pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SayHelloClientStream(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/Greeter/SayHelloClientStream",
            pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SayHelloBidirectional(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            "/Greeter/SayHelloBidirectional",
            pb2_dot_helloworld_dot_helloworld__pb2.HelloRequest.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SayHelloWithStruct(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Greeter/SayHelloWithStruct",
            google_dot_protobuf_dot_struct__pb2.Struct.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SayComplexHello(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/Greeter/SayComplexHello",
            pb2_dot_helloworld_dot_helloworld__pb2.ComplexRequest.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def SayComplexHelloStream(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            "/Greeter/SayComplexHelloStream",
            pb2_dot_helloworld_dot_helloworld__pb2.ComplexRequest.SerializeToString,
            pb2_dot_helloworld_dot_helloworld__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
